# =================================================================================
# 🎯 **[PHASE 1] 核心 API Key 识别 (Core API Key Detection)** 🎯
# =================================================================================
# **优先级: 最高 (HIGHEST PRIORITY)**
# **策略:** 精确识别各大平台的 API Key 格式，使用高精度正则表达式。
# **优化:** 新增多平台支持，涵盖主流 AI/云服务提供商。
# ---
# --- 1.1 Google & Gemini (核心目标) ---
"AIzaSy[A-Za-z0-9_\\-]{33}" fork:false         # Google/Gemini API Key (高精度正则)
# --- 1.2 AI & 大语言模型 (LLM Platforms) ---
"sk-proj-[a-zA-Z0-9]{48}"                     # OpenAI API Key (New Project-based format)
"sk-[a-zA-Z0-9]{48}"                         # OpenAI API Key (Legacy format)
"sk-ant-api03-[a-zA-Z0-9_\\-]{89}"           # Claude/Anthropic API Key
"hf_[a-zA-Z0-9]{35}"                         # Hugging Face Token
"r8_[a-zA-Z0-9]{40}"                         # Replicate API Token
# --- 1.3 Git 平台 & CI/CD ---
"ghp_[a-zA-Z0-9]{36}" fork:false             # GitHub Personal Access Token
"glpat-[a-zA-Z0-9-]{20}" fork:false         # GitLab Personal Access Token
# --- 1.4 云服务商 & SaaS ---
"AKIA[0-9A-Z]{16}" fork:false                 # AWS Access Key ID
"sk_live_[0-9a-zA-Z]{24}"                     # Stripe Live API Key
"SG\\.[a-zA-Z0-9_\\-]{66}"                     # SendGrid API Key
"xoxp-[0-9a-zA-Z-]+"                         # Slack Token (User)
# --- 1.5 通用私钥 ---
"-----BEGIN (RSA|OPENSSH|EC|PGP) PRIVATE KEY-----" fork:false
# =================================================================================
# 🎯 **[PHASE 2] 场景化扫描 (Contextual Targeting)** 🎯
# =================================================================================
# **优先级: 高 (HIGH PRIORITY)**
# **策略:** 聚焦 `AIzaSy` 在最高频泄露文件类型与路径中的组合。
# **优化:** 新增移动端、前端构建及Terraform等高风险场景。
# ---
# --- 2.1 环境变量与核心配置文件 (泄露重灾区) ---
"AIzaSy" (filename:.env OR filename:.env.local OR filename:.env.development OR filename:.env.production OR filename:.env.stage OR filename:.env.test OR path:**/.env) fork:false
(filename:secrets.json OR filename:credentials.json OR filename:secrets.yml OR filename:secrets.toml) "AIzaSy"
(filename:settings.py OR filename:config.py OR filename:constants.py) "API_KEY = \"AIzaSy"
(filename:config.json OR filename:config.yml OR filename:settings.json) "AIzaSy"
# --- 2.2 移动端与前端源码硬编码 ---
(language:kotlin OR language:java) "AIzaSy" path:app/src # Android (Kotlin/Java)
(language:swift OR language:"objective-c") "AIzaSy" # iOS (Swift/Objective-C)
(language:javascript OR language:typescript OR language:dart) "AIzaSy" NOT path:test # Web & Flutter
(filename:next.config.js OR filename:vue.config.js OR filename:craco.config.js OR filename:vite.config.js) "AIzaSy" # 前端构建配置
# --- 2.3 IaC 与 DevOps 配置文件 ---
(filename:*.tfvars OR filename:*.tfstate) "AIzaSy"
(filename:"docker-compose.yml" OR filename:"kubernetes.yml" OR filename:skaffold.yaml) ("API_KEY: AIzaSy" OR "GOOGLE_API_KEY: AIzaSy")
(filename:ansible.cfg OR filename:inventory.yml) "AIzaSy"
# --- 2.4 高信噪比关键字组合 ---
"Authorization: Bearer AIzaSy"
"x-api-key: AIzaSy"
"x-goog-api-key: AIzaSy"
extension:sh "export GOOGLE_API_KEY=\"AIzaSy"
# =================================================================================
# 🕵️‍♂️ **[PHASE 3] 行为溯源 (Behavioral Forensics)** 🕵️‍♂️
# =================================================================================
# **优先级: 中 (MEDIUM PRIORITY)**
# **策略:** 搜索代码提交历史、Gist、日志等非代码区，发现因疏忽导致的泄露。
# **优化:** 增强了对 diff、issue 和 Gist 的定向搜索。
# ---
# --- 3.1 开发者行为痕迹 ---
"removed Gemini key" in:commit # 密钥可能留在历史记录中
"fix google api key" in:commit
"revert key" in:commit "AIzaSy"
gist "AIzaSy" # Gist 是公开代码片段的重灾区
(in:file:.bash_history OR in:file:.zsh_history OR in:file:.fish_history) "AIzaSy"
# --- 3.2 代码变更与错误日志 ---
path:*.diff "+\"AIzaSy" # 在代码变更 diff 中寻找新增的密钥
extension:log ("status=401" OR "status=403" OR "AuthenticationError") "key=AIzaSy" # 从失败日志中溯源
"AIzaSy" is:issue is:open # 搜索在 issue 讨论中意外粘贴的 key
"AIzaSy" in:pr # 搜索在 Pull Request 描述或评论中的 key
# --- 3.3 敏感路径与数据库文件 ---
"AIzaSy" (path:/.aws/ OR path:/.gcp/ OR path:/.config/) fork:false
filename:*.sql "INSERT INTO" ("password", "api_key", "secret") "AIzaSy"
filename:*.bak "AIzaSy" # 备份文件中可能包含敏感信息
# =================================================================================
# 🌍 **[PHASE 4] 全域语法矩阵 (Global Syntax Matrix)** 🌍
# =================================================================================
# **优先级: 低 (LOW PRIORITY)**
# **策略:** (大规模扩展) 将 `AIzaSy` 作为不变核心，与 GitHub 搜索语法进行笛卡尔积组合，形成饱和式打击能力。在API配额充足时运行。
# **优化:** 每个查询都经过精心设计，以最大化信噪比。
# ---
# --- 4.1 按编程语言 (By Language) ---
# --- 4.1.1 脚本语言 (Scripting Languages) ---
"AIzaSy" language:python NOT path:test
"AIzaSy" language:javascript NOT path:test
"AIzaSy" language:typescript NOT path:test
"AIzaSy" language:ruby NOT path:test
"AIzaSy" language:php NOT path:test
"AIzaSy" language:perl NOT path:test
"AIzaSy" language:go NOT path:test
"AIzaSy" language:shell NOT path:test
"AIzaSy" language:powershell NOT path:test
"AIzaSy" language:lua NOT path:test
# --- 4.1.2 编译型语言 (Compiled Languages) ---
"AIzaSy" language:java NOT path:test
"AIzaSy" language:kotlin NOT path:test
"AIzaSy" language:swift NOT path:test
"AIzaSy" language:"objective-c" NOT path:test
"AIzaSy" language:csharp NOT path:test
"AIzaSy" language:c NOT path:test
"AIzaSy" language:cpp NOT path:test
"AIzaSy" language:rust NOT path:test
"AIzaSy" language:dart NOT path:test
"AIzaSy" language:haskell NOT path:test
"AIzaSy" language:scala NOT path:test
# --- 4.1.3 前端与数据格式 (Frontend & Data Formats) ---
"AIzaSy" language:html # 嵌入在 script 标签内
"AIzaSy" language:json # 直接暴露在 JSON 文件中
"AIzaSy" language:yaml
"AIzaSy" language:toml
"AIzaSy" language:xml
"AIzaSy" language:graphql
"AIzaSy" language:jupyter-notebook # Jupyter Notebooks 是泄露重灾区
# --- 4.2 按文件扩展名 (By Extension) ---
# --- 4.2.1 脚本与源码 (Scripts & Source Code) ---
"AIzaSy" extension:py
"AIzaSy" extension:js
"AIzaSy" extension:ts
"AIzaSy" extension:jsx
"AIzaSy" extension:tsx
"AIzaSy" extension:rb
"AIzaSy" extension:php
"AIzaSy" extension:pl
"AIzaSy" extension:go
"AIzaSy" extension:sh
"AIzaSy" extension:ps1
"AIzaSy" extension:java
"AIzaSy" extension:kt
"AIzaSy" extension:swift
"AIzaSy" extension:cs
"AIzaSy" extension:c
"AIzaSy" extension:cpp
"AIzaSy" extension:rs
"AIzaSy" extension:dart
"AIzaSy" extension:m # Objective-C
# --- 4.2.2 配置与数据 (Config & Data) ---
"AIzaSy" extension:json
"AIzaSy" extension:yaml
"AIzaSy" extension:yml
"AIzaSy" extension:toml
"AIzaSy" extension:xml
"AIzaSy" extension:env
"AIzaSy" extension:ini
"AIzaSy" extension:conf
"AIzaSy" extension:cfg
"AIzaSy" extension:properties
"AIzaSy" extension:sql
"AIzaSy" extension:log
"AIzaSy" extension:txt
"AIzaSy" extension:md
"AIzaSy" extension:ipynb
# --- 4.3 按文件名 (By Filename) ---
# --- 4.3.1 常见配置文件 (Common Config Files) ---
"AIzaSy" filename:config
"AIzaSy" filename:settings
"AIzaSy" filename:credentials
"AIzaSy" filename:secret
"AIzaSy" filename:secrets
"AIzaSy" filename:env
"AIzaSy" filename:docker-compose
"AIzaSy" filename:application
"AIzaSy" filename:bootstrap
"AIzaSy" filename:main
"AIzaSy" filename:index
"AIzaSy" filename:constants
"AIzaSy" filename:variables
"AIzaSy" filename:key
"AIzaSy" filename:keys
"AIzaSy" filename:local
"AIzaSy" filename:production
"AIzaSy" filename:development
"AIzaSy" filename:staging
"AIzaSy" filename:database
"AIzaSy" filename:gradle.properties
"AIzaSy" filename:local.properties
# --- 4.3.2 特殊与临时文件 (Special & Temp Files) ---
"AIzaSy" filename:*.bak
"AIzaSy" filename:*.tmp
"AIzaSy" filename:*.old
"AIzaSy" filename:*.swp
"AIzaSy" filename:notes.txt
"AIzaSy" filename:TODO.md
# --- 4.4 按文件路径 (By Path) ---
# --- 4.4.1 目录级搜索 (Directory-level Search) ---
"AIzaSy" path:/config/
"AIzaSy" path:/settings/
"AIzaSy" path:/src/main/resources/
"AIzaSy" path:/app/
"AIzaSy" path:/api/
"AIzaSy" path:/service/
"AIzaSy" path:/util/
"AIzaSy" path:/utils/
"AIzaSy" path:/lib/
"AIzaSy" path:/core/
"AIzaSy" path:/includes/
"AIzaSy" path:/common/
"AIzaSy" path:/scripts/
"AIzaSy" path:/deploy/
"AIzaSy" path:/build/
"AIzaSy" path:/dist/
"AIzaSy" path:/.github/
"AIzaSy" path:/.circleci/
"AIzaSy" path:/.idea/ # JetBrains IDEs
"AIzaSy" path:/.vscode/ # VSCode
# --- 4.4.2 根目录文件 (Root-level Files) ---
"AIzaSy" path:/
# --- 4.5 组合矩阵搜索 (Combined Matrix Search) ---
# --- 4.5.1 语言 + 路径 (Language + Path) ---
"AIzaSy" language:python path:/app/
"AIzaSy" language:javascript path:/src/utils/
"AIzaSy" language:go path:/internal/api/
"AIzaSy" language:java path:/src/main/java/com/example/config/
"AIzaSy" language:ruby path:/config/initializers/
"AIzaSy" language:php path:/includes/
# --- 4.5.2 扩展名 + 路径 (Extension + Path) ---
"AIzaSy" extension:properties path:/src/main/resources/
"AIzaSy" extension:yml path:/config/
"AIzaSy" extension:json path:/credentials/
"AIzaSy" extension:sh path:/scripts/
# --- 4.5.3 文件名 + 路径 (Filename + Path) ---
"AIzaSy" filename:application.properties path:/src/main/resources/
"AIzaSy" filename:database.yml path:/config/
"AIzaSy" filename:secrets.json path:/
"AIzaSy" filename:settings.py path:/project/
# --- 4.5.4 语言 + 变量名 (Language + Variable Name) ---
"GEMINI_API_KEY = AIzaSy" language:python
"const GEMINI_API_KEY = 'AIzaSy" language:javascript
"private final String GEMINI_API_KEY = \"AIzaSy" language:java
"let geminiApiKey = \"AIzaSy" language:swift
"val geminiApiKey = \"AIzaSy" language:kotlin
# --- 4.6 `in:` 限定符专项搜索 (Qualifier-Specific Search `in:`) ---
"AIzaSy" in:file # 强制只搜索文件内容
"AIzaSy" in:path # 极其罕见但致命：密钥在文件名或路径中
"AIzaSy" in:file,path # 搜索文件内容和路径
# --- 4.7 专题搜索: Google Cloud & Services (已优化) ---
"google.generativeai" "AIzaSy" language:python NOT path:test
"generativelanguage.googleapis.com" "AIzaSy" NOT path:docs
"maps.googleapis.com/maps/api" "AIzaSy" NOT path:example
"fcm.googleapis.com/fcm/send" "AIzaSy"
"vision.googleapis.com" "AIzaSy"
"language.googleapis.com" "AIzaSy"
"firestore.googleapis.com" "AIzaSy"

# =================================================================================
# 🔍 **多提供商API Key查询 (Multi-Provider API Key Queries)** 🔍
# =================================================================================
# --- OpenAI Keys ---
"sk-" in:file fork:false
"sk-proj-" in:file fork:false
"OPENAI_API_KEY" in:file fork:false
"openai.api_key" in:file
"sk-" extension:env
"sk-" extension:py
"sk-" extension:js
"sk-" extension:ts
"sk-" extension:json
"sk-" extension:yaml
"sk-" extension:yml

# --- Claude/Anthropic Keys ---
"sk-ant-api03" in:file fork:false
"ANTHROPIC_API_KEY" in:file fork:false
"anthropic.api_key" in:file
"sk-ant-api03" extension:env
"sk-ant-api03" extension:py
"sk-ant-api03" extension:js
"sk-ant-api03" extension:ts

# --- 其他AI平台 ---
"hf_" in:file # Hugging Face
"r8_" in:file # Replicate

# --- 云服务商 ---
"AKIA" in:file fork:false # AWS
"sk_live_" in:file # Stripe
"SG." in:file # SendGrid

# --- Git平台 ---
"ghp_" in:file fork:false # GitHub
"glpat-" in:file fork:false # GitLab

# =================================================================================
# **最终建议 (Final Recommendations):**
# 1.  **自动化与去重:** 强烈建议编写脚本，按顺序加载并执行这四个阶段的查询，并对返回的 URL 进行高效去重，避免重复分析。
# 2.  **动态进化:** 关注 Google Cloud 新服务的 API 格式与 SDK 使用方式，并将其特征添加到 [PHASE 4] 的专题搜索列表中。
# 3.  **左移安全 (Shift-Left):** 将此文件作为 CI/CD 流程的一部分，利用 `gitleaks` 或 `trufflehog` 等工具在提交前自动化扫描，从源头杜绝泄露。
# 4.  **API 配额管理:** [PHASE 4] 的查询量巨大，请注意 GitHub API 的速率限制。在自动化脚本中加入适当的延时或使用带有 Token 的认证请求以提高配额。
# =================================================================================